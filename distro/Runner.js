"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Runner = void 0;
const app = require("lib");
const ui = require("ui");
class Runner {
    constructor(canvas = document.getElementById('canvas'), map = new app.features.Map(canvas), radar = new app.features.Radar(canvas), recoil = new app.features.Recoil(), sense = new app.features.Sense()) {
        this.canvas = canvas;
        this.map = map;
        this.radar = radar;
        this.recoil = recoil;
        this.sense = sense;
    }
    static create() {
        const source = new Runner();
        source.attach();
        return source.run.bind(source);
    }
    run(core, vm) {
        const localPlayer = core.playerList.get(core.localPlayer.value);
        this.updateResearch(core, vm, localPlayer);
        this.updateSense(core, vm, localPlayer);
        this.canvas.height = window.innerHeight;
        this.canvas.width = window.innerWidth;
        this.update(core, vm, localPlayer);
    }
    attach() {
        this.canvas.addEventListener('dblclick', () => {
            (document.fullscreenElement
                ? document.exitFullscreen()
                : document.body.requestFullscreen()).catch();
        });
    }
    update(core, vm, localPlayer) {
        switch (vm.settings.general.viewType.value) {
            case ui.settings.general.MainType.Map:
                this.map.refresh(core.levelName.value);
                this.updateMap(core, vm, localPlayer);
                break;
            case ui.settings.general.MainType.Radar:
                this.radar.refresh();
                this.updateRadar(core, vm, localPlayer);
                break;
        }
    }
    updateMap(core, vm, localPlayer) {
        if (vm.settings.general.map.showItems.value)
            this.map.renderItems(core.itemList.values(), vm.settings.itemSet);
        if (vm.settings.general.map.showPlayers.value && localPlayer)
            this.map.renderPlayers(localPlayer, core.playerList.values());
    }
    updateRadar(core, vm, localPlayer) {
        if (vm.settings.general.radar.showItems.value && localPlayer)
            this.radar.renderItems(localPlayer, core.itemList.values(), vm.settings.itemSet);
        if (vm.settings.general.radar.showPlayers.value && localPlayer)
            this.radar.renderNpcs(localPlayer, core.npcList.values());
        if (vm.settings.general.radar.showPlayers.value && localPlayer)
            this.radar.renderPlayers(localPlayer, core.playerList.values());
    }
    updateResearch(core, vm, localPlayer) {
        if (vm.settings.research.recoil.enable.value && localPlayer && vm.settings.research.recoil.options)
            this.recoil.update(core.buttonList, localPlayer, vm.settings.research.recoil.options);
    }
    updateSense(core, vm, localPlayer) {
        const itemsFn = vm.settings.general.sense.highlightItems.value
            ? this.sense.updateItems.bind(this.sense)
            : this.sense.resetItems.bind(this.sense);
        const playersFn = vm.settings.general.sense.highlightPlayers.value
            ? this.sense.updatePlayers.bind(this.sense)
            : this.sense.resetPlayers.bind(this.sense);
        if (localPlayer) {
            itemsFn(localPlayer, core.itemList.values(), vm.settings.itemSet);
            playersFn(localPlayer, core.playerList.values());
        }
    }
}
exports.Runner = Runner;
//# sourceMappingURL=data:application/json;base64,