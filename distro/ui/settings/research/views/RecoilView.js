"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecoilView = void 0;
const app = require("..");
const React = require("react");
const ui = require("ui");
exports.RecoilView = ui.createView(({ vm }) => (React.createElement(ui.material.FormGroup, null,
    React.createElement(ui.material.Typography, { variant: "h6" }, app.language.researchRecoil),
    React.createElement(ui.material.FormControlLabel, { label: app.language.researchRecoilEnable, control: React.createElement(ui.material.Switch, { onChange: x => vm.enable.change(x.target.checked), checked: vm.enable.value }) }),
    React.createElement(ui.material.Box, { sx: styles.sliderLabel },
        React.createElement(ui.material.Typography, null, app.language.researchRecoilPercentage),
        React.createElement(ui.material.Box, { sx: styles.sliderValue }, vm.percentage.value)),
    React.createElement(ui.material.Slider, { onChange: (_, x) => vm.percentage.change(Number(x)), value: vm.percentage.value, min: 0, max: 1, step: 0.01 }))));
const styles = {
    sliderLabel: {
        position: 'relative'
    },
    sliderValue: {
        position: 'absolute',
        right: 0,
        top: 0
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVjb2lsVmlldy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy91aS9zZXR0aW5ncy9yZXNlYXJjaC92aWV3cy9SZWNvaWxWaWV3LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwwQkFBMEI7QUFDMUIsK0JBQStCO0FBQy9CLHlCQUF5QjtBQUVaLFFBQUEsVUFBVSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQTRCLENBQUMsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFFLENBQUMsQ0FDM0Usb0JBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTO0lBQ3BCLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsVUFBVSxJQUFDLE9BQU8sRUFBQyxJQUFJLElBQ2pDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUNMO0lBQ3pCLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLElBQzNCLEtBQUssRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLG9CQUFvQixFQUN4QyxPQUFPLEVBQUUsb0JBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLElBQzFCLFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQ2pELE9BQU8sRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBSSxHQUFJO0lBQ3BDLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxJQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsV0FBVztRQUNyQyxvQkFBQyxFQUFFLENBQUMsUUFBUSxDQUFDLFVBQVUsUUFDcEIsR0FBRyxDQUFDLFFBQVEsQ0FBQyx3QkFBd0IsQ0FDZjtRQUN6QixvQkFBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLFdBQVcsSUFDcEMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQ0osQ0FDRjtJQUNsQixvQkFBQyxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sSUFDakIsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQ25ELEtBQUssRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLEtBQUssRUFDMUIsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEdBQUksQ0FDVixDQUN6QixDQUFDLENBQUM7QUFFSCxNQUFNLE1BQU0sR0FBRztJQUNiLFdBQVcsRUFBRTtRQUNYLFFBQVEsRUFBRSxVQUFVO0tBQ3JCO0lBQ0QsV0FBVyxFQUFFO1FBQ1gsUUFBUSxFQUFFLFVBQVU7UUFDcEIsS0FBSyxFQUFFLENBQUM7UUFDUixHQUFHLEVBQUUsQ0FBQztLQUNQO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFwcCBmcm9tICcuLic7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyB1aSBmcm9tICd1aSc7XG5cbmV4cG9ydCBjb25zdCBSZWNvaWxWaWV3ID0gdWkuY3JlYXRlVmlldzx7dm06IGFwcC5SZWNvaWxWaWV3TW9kZWx9Pigoe3ZtfSkgPT4gKFxuICA8dWkubWF0ZXJpYWwuRm9ybUdyb3VwPlxuICAgIDx1aS5tYXRlcmlhbC5UeXBvZ3JhcGh5IHZhcmlhbnQ9XCJoNlwiPlxuICAgICAge2FwcC5sYW5ndWFnZS5yZXNlYXJjaFJlY29pbH1cbiAgICA8L3VpLm1hdGVyaWFsLlR5cG9ncmFwaHk+XG4gICAgPHVpLm1hdGVyaWFsLkZvcm1Db250cm9sTGFiZWxcbiAgICAgIGxhYmVsPXthcHAubGFuZ3VhZ2UucmVzZWFyY2hSZWNvaWxFbmFibGV9XG4gICAgICBjb250cm9sPXs8dWkubWF0ZXJpYWwuU3dpdGNoXG4gICAgICAgIG9uQ2hhbmdlPXt4ID0+IHZtLmVuYWJsZS5jaGFuZ2UoeC50YXJnZXQuY2hlY2tlZCl9XG4gICAgICAgIGNoZWNrZWQ9e3ZtLmVuYWJsZS52YWx1ZX0gLz59IC8+XG4gICAgPHVpLm1hdGVyaWFsLkJveCBzeD17c3R5bGVzLnNsaWRlckxhYmVsfT5cbiAgICAgIDx1aS5tYXRlcmlhbC5UeXBvZ3JhcGh5PlxuICAgICAgICB7YXBwLmxhbmd1YWdlLnJlc2VhcmNoUmVjb2lsUGVyY2VudGFnZX1cbiAgICAgIDwvdWkubWF0ZXJpYWwuVHlwb2dyYXBoeT5cbiAgICAgIDx1aS5tYXRlcmlhbC5Cb3ggc3g9e3N0eWxlcy5zbGlkZXJWYWx1ZX0+XG4gICAgICAgIHt2bS5wZXJjZW50YWdlLnZhbHVlfVxuICAgICAgPC91aS5tYXRlcmlhbC5Cb3g+XG4gICAgPC91aS5tYXRlcmlhbC5Cb3g+XG4gICAgPHVpLm1hdGVyaWFsLlNsaWRlclxuICAgICAgb25DaGFuZ2U9eyhfLCB4KSA9PiB2bS5wZXJjZW50YWdlLmNoYW5nZShOdW1iZXIoeCkpfVxuICAgICAgdmFsdWU9e3ZtLnBlcmNlbnRhZ2UudmFsdWV9XG4gICAgICBtaW49ezB9IG1heD17MX0gc3RlcD17MC4wMX0gLz5cbiAgPC91aS5tYXRlcmlhbC5Gb3JtR3JvdXA+XG4pKTtcblxuY29uc3Qgc3R5bGVzID0ge1xuICBzbGlkZXJMYWJlbDoge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnXG4gIH0sXG4gIHNsaWRlclZhbHVlOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgcmlnaHQ6IDAsXG4gICAgdG9wOiAwXG4gIH1cbn07XG4iXX0=