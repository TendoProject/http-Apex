"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainView = void 0;
const app = require(".");
const React = require("react");
const ui = require("ui");
const FilterList_1 = require("@mui/icons-material/FilterList");
const Science_1 = require("@mui/icons-material/Science");
const Settings_1 = require("@mui/icons-material/Settings");
exports.MainView = ui.createView(({ vm }) => (React.createElement(ui.material.Box, { sx: styles.container },
    React.createElement(SwitchView, { vm: vm }),
    React.createElement(ui.material.Paper, { sx: styles.navigation, square: true },
        React.createElement(ui.material.Divider, null),
        React.createElement(ui.material.BottomNavigation, { showLabels: true, value: vm.currentView },
            React.createElement(ui.material.BottomNavigationAction, { sx: styles.navigationAction, onClick: () => vm.changeView(0), icon: React.createElement(Settings_1.default, null), label: app.language.general }),
            React.createElement(ui.material.BottomNavigationAction, { sx: styles.navigationAction, onClick: () => vm.changeView(1), icon: React.createElement(FilterList_1.default, null), label: app.language.items }),
            React.createElement(ui.material.BottomNavigationAction, { sx: styles.navigationAction, onClick: () => vm.changeView(2), icon: React.createElement(Science_1.default, null), label: app.language.research }))))));
const SwitchView = ui.createView(({ vm }) => {
    switch (vm.currentView) {
        case 1: return React.createElement(app.items.MainView, { vm: vm.items });
        case 2: return React.createElement(app.research.MainView, { vm: vm.research });
        default: return React.createElement(app.general.MainView, { vm: vm.general });
    }
});
const styles = {
    container: {
        margin: '0 auto',
        maxWidth: '384px',
        padding: '16px',
        paddingBottom: '56px'
    },
    navigation: {
        position: 'fixed',
        bottom: 0,
        left: 0,
        right: 0
    },
    navigationAction: {
        maxWidth: '128px'
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFpblZpZXcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdWkvc2V0dGluZ3MvTWFpblZpZXcudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHlCQUF5QjtBQUN6QiwrQkFBK0I7QUFDL0IseUJBQXlCO0FBQ3pCLCtEQUF3RDtBQUN4RCx5REFBa0Q7QUFDbEQsMkRBQW9EO0FBRXZDLFFBQUEsUUFBUSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQTBCLENBQUMsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFFLENBQUMsQ0FDdkUsb0JBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLElBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxTQUFTO0lBQ25DLG9CQUFDLFVBQVUsSUFBQyxFQUFFLEVBQUUsRUFBRSxHQUFJO0lBQ3RCLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsS0FBSyxJQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJO1FBQ3BELG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxPQUFHO1FBQ3ZCLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLElBQUMsVUFBVSxRQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsV0FBVztZQUM1RCxvQkFBQyxFQUFFLENBQUMsUUFBUSxDQUFDLHNCQUFzQixJQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsZ0JBQWdCLEVBQzdELE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUMvQixJQUFJLEVBQUUsb0JBQUMsa0JBQVEsT0FBRyxFQUNsQixLQUFLLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUk7WUFDakMsb0JBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxzQkFBc0IsSUFBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUM3RCxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFDL0IsSUFBSSxFQUFFLG9CQUFDLG9CQUFVLE9BQUcsRUFDcEIsS0FBSyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFJO1lBQy9CLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsc0JBQXNCLElBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxnQkFBZ0IsRUFDN0QsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQy9CLElBQUksRUFBRSxvQkFBQyxpQkFBTyxPQUFHLEVBQ2pCLEtBQUssRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLFFBQVEsR0FBSSxDQUNMLENBQ2IsQ0FDSixDQUNuQixDQUFDLENBQUM7QUFFSCxNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUEwQixDQUFDLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBRTtJQUNqRSxRQUFRLEVBQUUsQ0FBQyxXQUFXLEVBQUU7UUFDdEIsS0FBSyxDQUFDLENBQUMsQ0FBQyxPQUFPLG9CQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxJQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsS0FBSyxHQUFJLENBQUM7UUFDcEQsS0FBSyxDQUFDLENBQUMsQ0FBQyxPQUFPLG9CQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxJQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsUUFBUSxHQUFJLENBQUM7UUFDMUQsT0FBTyxDQUFDLENBQUMsT0FBTyxvQkFBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsSUFBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLE9BQU8sR0FBSSxDQUFDO0tBQzFEO0FBQ0gsQ0FBQyxDQUFDLENBQUM7QUFFSCxNQUFNLE1BQU0sR0FBRztJQUNiLFNBQVMsRUFBRTtRQUNULE1BQU0sRUFBRSxRQUFRO1FBQ2hCLFFBQVEsRUFBRSxPQUFPO1FBQ2pCLE9BQU8sRUFBRSxNQUFNO1FBQ2YsYUFBYSxFQUFFLE1BQU07S0FDdEI7SUFDRCxVQUFVLEVBQUU7UUFDVixRQUFRLEVBQUUsT0FBTztRQUNqQixNQUFNLEVBQUUsQ0FBQztRQUNULElBQUksRUFBRSxDQUFDO1FBQ1AsS0FBSyxFQUFFLENBQUM7S0FDVDtJQUNELGdCQUFnQixFQUFFO1FBQ2hCLFFBQVEsRUFBRSxPQUFPO0tBQ2xCO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFwcCBmcm9tICcuJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAqIGFzIHVpIGZyb20gJ3VpJztcbmltcG9ydCBGaWx0ZXJMaXN0IGZyb20gJ0BtdWkvaWNvbnMtbWF0ZXJpYWwvRmlsdGVyTGlzdCc7XG5pbXBvcnQgU2NpZW5jZSBmcm9tICdAbXVpL2ljb25zLW1hdGVyaWFsL1NjaWVuY2UnO1xuaW1wb3J0IFNldHRpbmdzIGZyb20gJ0BtdWkvaWNvbnMtbWF0ZXJpYWwvU2V0dGluZ3MnO1xuXG5leHBvcnQgY29uc3QgTWFpblZpZXcgPSB1aS5jcmVhdGVWaWV3PHt2bTogYXBwLk1haW5WaWV3TW9kZWx9Pigoe3ZtfSkgPT4gKFxuICA8dWkubWF0ZXJpYWwuQm94IHN4PXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICA8U3dpdGNoVmlldyB2bT17dm19IC8+XG4gICAgPHVpLm1hdGVyaWFsLlBhcGVyIHN4PXtzdHlsZXMubmF2aWdhdGlvbn0gc3F1YXJlPXt0cnVlfT5cbiAgICAgIDx1aS5tYXRlcmlhbC5EaXZpZGVyIC8+XG4gICAgICA8dWkubWF0ZXJpYWwuQm90dG9tTmF2aWdhdGlvbiBzaG93TGFiZWxzIHZhbHVlPXt2bS5jdXJyZW50Vmlld30+XG4gICAgICAgIDx1aS5tYXRlcmlhbC5Cb3R0b21OYXZpZ2F0aW9uQWN0aW9uIHN4PXtzdHlsZXMubmF2aWdhdGlvbkFjdGlvbn1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB2bS5jaGFuZ2VWaWV3KDApfVxuICAgICAgICAgIGljb249ezxTZXR0aW5ncyAvPn1cbiAgICAgICAgICBsYWJlbD17YXBwLmxhbmd1YWdlLmdlbmVyYWx9IC8+XG4gICAgICAgIDx1aS5tYXRlcmlhbC5Cb3R0b21OYXZpZ2F0aW9uQWN0aW9uIHN4PXtzdHlsZXMubmF2aWdhdGlvbkFjdGlvbn1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB2bS5jaGFuZ2VWaWV3KDEpfVxuICAgICAgICAgIGljb249ezxGaWx0ZXJMaXN0IC8+fVxuICAgICAgICAgIGxhYmVsPXthcHAubGFuZ3VhZ2UuaXRlbXN9IC8+XG4gICAgICAgIDx1aS5tYXRlcmlhbC5Cb3R0b21OYXZpZ2F0aW9uQWN0aW9uIHN4PXtzdHlsZXMubmF2aWdhdGlvbkFjdGlvbn1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB2bS5jaGFuZ2VWaWV3KDIpfVxuICAgICAgICAgIGljb249ezxTY2llbmNlIC8+fVxuICAgICAgICAgIGxhYmVsPXthcHAubGFuZ3VhZ2UucmVzZWFyY2h9IC8+XG4gICAgICA8L3VpLm1hdGVyaWFsLkJvdHRvbU5hdmlnYXRpb24+XG4gICAgPC91aS5tYXRlcmlhbC5QYXBlcj5cbiAgPC91aS5tYXRlcmlhbC5Cb3g+XG4pKTtcblxuY29uc3QgU3dpdGNoVmlldyA9IHVpLmNyZWF0ZVZpZXc8e3ZtOiBhcHAuTWFpblZpZXdNb2RlbH0+KCh7dm19KSA9PiB7XG4gIHN3aXRjaCAodm0uY3VycmVudFZpZXcpIHtcbiAgICBjYXNlIDE6IHJldHVybiA8YXBwLml0ZW1zLk1haW5WaWV3IHZtPXt2bS5pdGVtc30gLz47XG4gICAgY2FzZSAyOiByZXR1cm4gPGFwcC5yZXNlYXJjaC5NYWluVmlldyB2bT17dm0ucmVzZWFyY2h9IC8+O1xuICAgIGRlZmF1bHQ6IHJldHVybiA8YXBwLmdlbmVyYWwuTWFpblZpZXcgdm09e3ZtLmdlbmVyYWx9IC8+O1xuICB9XG59KTtcblxuY29uc3Qgc3R5bGVzID0ge1xuICBjb250YWluZXI6IHtcbiAgICBtYXJnaW46ICcwIGF1dG8nLFxuICAgIG1heFdpZHRoOiAnMzg0cHgnLFxuICAgIHBhZGRpbmc6ICcxNnB4JyxcbiAgICBwYWRkaW5nQm90dG9tOiAnNTZweCdcbiAgfSxcbiAgbmF2aWdhdGlvbjoge1xuICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgIGJvdHRvbTogMCxcbiAgICBsZWZ0OiAwLFxuICAgIHJpZ2h0OiAwXG4gIH0sXG4gIG5hdmlnYXRpb25BY3Rpb246IHtcbiAgICBtYXhXaWR0aDogJzEyOHB4J1xuICB9XG59O1xuIl19