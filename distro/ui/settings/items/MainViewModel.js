"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainViewModel = void 0;
const app = require(".");
class MainViewModel {
    constructor() {
        this.areas = [
            new app.AreaViewModel(app.language.itemsAmmo, x => x.itemType === 'Ammo'),
            new app.AreaViewModel(app.language.itemsGearBackpack, x => x.itemType === 'Gear' && x.gearType === 'Backpack'),
            new app.AreaViewModel(app.language.itemsGearBodyShield, x => x.itemType === 'Gear' && x.gearType === 'BodyShield'),
            new app.AreaViewModel(app.language.itemsGearEvoShield, x => x.itemType === 'Gear' && x.gearType === 'EvoShield'),
            new app.AreaViewModel(app.language.itemsGearHelmet, x => x.itemType === 'Gear' && x.gearType === 'Helmet'),
            new app.AreaViewModel(app.language.itemsGearKnockdownShield, x => x.itemType === 'Gear' && x.gearType === 'KnockdownShield'),
            new app.AreaViewModel(app.language.itemsGrenade, x => x.itemType === 'Grenade'),
            new app.AreaViewModel(app.language.itemsRegen, x => x.itemType === 'Regen'),
            new app.AreaViewModel(app.language.itemsWeaponsEnergy, x => x.itemType === 'Weapon' && x.ammoType === 'Energy'),
            new app.AreaViewModel(app.language.itemsWeaponsHeavy, x => x.itemType === 'Weapon' && x.ammoType === 'Heavy'),
            new app.AreaViewModel(app.language.itemsWeaponsLight, x => x.itemType === 'Weapon' && x.ammoType === 'Light'),
            new app.AreaViewModel(app.language.itemsWeaponShotgun, x => x.itemType === 'Weapon' && x.ammoType === 'Shotgun'),
            new app.AreaViewModel(app.language.itemsWeaponsSniper, x => x.itemType === 'Weapon' && x.ammoType === 'Sniper'),
            new app.AreaViewModel(app.language.itemsWeaponsSpecial, x => x.itemType === 'Weapon' && x.ammoType === 'Special'),
            new app.AreaViewModel(app.language.itemsWeaponAttachments, x => x.itemType === 'Attachment')
        ];
    }
    toItemSet(value) {
        for (const area of this.areas) {
            area.toItemSet(value);
        }
    }
}
exports.MainViewModel = MainViewModel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFpblZpZXdNb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy91aS9zZXR0aW5ncy9pdGVtcy9NYWluVmlld01vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHlCQUF5QjtBQUV6QixNQUFhLGFBQWE7SUFBMUI7UUFDVyxVQUFLLEdBQUc7WUFDZixJQUFJLEdBQUcsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxLQUFLLE1BQU0sQ0FBQztZQUN6RSxJQUFJLEdBQUcsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLEtBQUssTUFBTSxJQUFJLENBQUMsQ0FBQyxRQUFRLEtBQUssVUFBVSxDQUFDO1lBQzlHLElBQUksR0FBRyxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFtQixFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsS0FBSyxNQUFNLElBQUksQ0FBQyxDQUFDLFFBQVEsS0FBSyxZQUFZLENBQUM7WUFDbEgsSUFBSSxHQUFHLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxLQUFLLE1BQU0sSUFBSSxDQUFDLENBQUMsUUFBUSxLQUFLLFdBQVcsQ0FBQztZQUNoSCxJQUFJLEdBQUcsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxLQUFLLE1BQU0sSUFBSSxDQUFDLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQztZQUMxRyxJQUFJLEdBQUcsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyx3QkFBd0IsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLEtBQUssTUFBTSxJQUFJLENBQUMsQ0FBQyxRQUFRLEtBQUssaUJBQWlCLENBQUM7WUFDNUgsSUFBSSxHQUFHLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsS0FBSyxTQUFTLENBQUM7WUFDL0UsSUFBSSxHQUFHLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsS0FBSyxPQUFPLENBQUM7WUFDM0UsSUFBSSxHQUFHLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxLQUFLLFFBQVEsSUFBSSxDQUFDLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQztZQUMvRyxJQUFJLEdBQUcsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLEtBQUssUUFBUSxJQUFJLENBQUMsQ0FBQyxRQUFRLEtBQUssT0FBTyxDQUFDO1lBQzdHLElBQUksR0FBRyxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsS0FBSyxRQUFRLElBQUksQ0FBQyxDQUFDLFFBQVEsS0FBSyxPQUFPLENBQUM7WUFDN0csSUFBSSxHQUFHLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxLQUFLLFFBQVEsSUFBSSxDQUFDLENBQUMsUUFBUSxLQUFLLFNBQVMsQ0FBQztZQUNoSCxJQUFJLEdBQUcsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLEtBQUssUUFBUSxJQUFJLENBQUMsQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDO1lBQy9HLElBQUksR0FBRyxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFtQixFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsS0FBSyxRQUFRLElBQUksQ0FBQyxDQUFDLFFBQVEsS0FBSyxTQUFTLENBQUM7WUFDakgsSUFBSSxHQUFHLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsc0JBQXNCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxLQUFLLFlBQVksQ0FBQztTQUM3RixDQUFDO0lBT0osQ0FBQztJQUxDLFNBQVMsQ0FBQyxLQUFrQjtRQUMxQixLQUFLLE1BQU0sSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDN0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN2QjtJQUNILENBQUM7Q0FDRjtBQXhCRCxzQ0F3QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhcHAgZnJvbSAnLic7XG5cbmV4cG9ydCBjbGFzcyBNYWluVmlld01vZGVsIHtcbiAgcmVhZG9ubHkgYXJlYXMgPSBbXG4gICAgbmV3IGFwcC5BcmVhVmlld01vZGVsKGFwcC5sYW5ndWFnZS5pdGVtc0FtbW8sIHggPT4geC5pdGVtVHlwZSA9PT0gJ0FtbW8nKSxcbiAgICBuZXcgYXBwLkFyZWFWaWV3TW9kZWwoYXBwLmxhbmd1YWdlLml0ZW1zR2VhckJhY2twYWNrLCB4ID0+IHguaXRlbVR5cGUgPT09ICdHZWFyJyAmJiB4LmdlYXJUeXBlID09PSAnQmFja3BhY2snKSxcbiAgICBuZXcgYXBwLkFyZWFWaWV3TW9kZWwoYXBwLmxhbmd1YWdlLml0ZW1zR2VhckJvZHlTaGllbGQsIHggPT4geC5pdGVtVHlwZSA9PT0gJ0dlYXInICYmIHguZ2VhclR5cGUgPT09ICdCb2R5U2hpZWxkJyksXG4gICAgbmV3IGFwcC5BcmVhVmlld01vZGVsKGFwcC5sYW5ndWFnZS5pdGVtc0dlYXJFdm9TaGllbGQsIHggPT4geC5pdGVtVHlwZSA9PT0gJ0dlYXInICYmIHguZ2VhclR5cGUgPT09ICdFdm9TaGllbGQnKSxcbiAgICBuZXcgYXBwLkFyZWFWaWV3TW9kZWwoYXBwLmxhbmd1YWdlLml0ZW1zR2VhckhlbG1ldCwgeCA9PiB4Lml0ZW1UeXBlID09PSAnR2VhcicgJiYgeC5nZWFyVHlwZSA9PT0gJ0hlbG1ldCcpLFxuICAgIG5ldyBhcHAuQXJlYVZpZXdNb2RlbChhcHAubGFuZ3VhZ2UuaXRlbXNHZWFyS25vY2tkb3duU2hpZWxkLCB4ID0+IHguaXRlbVR5cGUgPT09ICdHZWFyJyAmJiB4LmdlYXJUeXBlID09PSAnS25vY2tkb3duU2hpZWxkJyksXG4gICAgbmV3IGFwcC5BcmVhVmlld01vZGVsKGFwcC5sYW5ndWFnZS5pdGVtc0dyZW5hZGUsIHggPT4geC5pdGVtVHlwZSA9PT0gJ0dyZW5hZGUnKSxcbiAgICBuZXcgYXBwLkFyZWFWaWV3TW9kZWwoYXBwLmxhbmd1YWdlLml0ZW1zUmVnZW4sIHggPT4geC5pdGVtVHlwZSA9PT0gJ1JlZ2VuJyksXG4gICAgbmV3IGFwcC5BcmVhVmlld01vZGVsKGFwcC5sYW5ndWFnZS5pdGVtc1dlYXBvbnNFbmVyZ3ksIHggPT4geC5pdGVtVHlwZSA9PT0gJ1dlYXBvbicgJiYgeC5hbW1vVHlwZSA9PT0gJ0VuZXJneScpLFxuICAgIG5ldyBhcHAuQXJlYVZpZXdNb2RlbChhcHAubGFuZ3VhZ2UuaXRlbXNXZWFwb25zSGVhdnksIHggPT4geC5pdGVtVHlwZSA9PT0gJ1dlYXBvbicgJiYgeC5hbW1vVHlwZSA9PT0gJ0hlYXZ5JyksXG4gICAgbmV3IGFwcC5BcmVhVmlld01vZGVsKGFwcC5sYW5ndWFnZS5pdGVtc1dlYXBvbnNMaWdodCwgeCA9PiB4Lml0ZW1UeXBlID09PSAnV2VhcG9uJyAmJiB4LmFtbW9UeXBlID09PSAnTGlnaHQnKSxcbiAgICBuZXcgYXBwLkFyZWFWaWV3TW9kZWwoYXBwLmxhbmd1YWdlLml0ZW1zV2VhcG9uU2hvdGd1biwgeCA9PiB4Lml0ZW1UeXBlID09PSAnV2VhcG9uJyAmJiB4LmFtbW9UeXBlID09PSAnU2hvdGd1bicpLFxuICAgIG5ldyBhcHAuQXJlYVZpZXdNb2RlbChhcHAubGFuZ3VhZ2UuaXRlbXNXZWFwb25zU25pcGVyLCB4ID0+IHguaXRlbVR5cGUgPT09ICdXZWFwb24nICYmIHguYW1tb1R5cGUgPT09ICdTbmlwZXInKSxcbiAgICBuZXcgYXBwLkFyZWFWaWV3TW9kZWwoYXBwLmxhbmd1YWdlLml0ZW1zV2VhcG9uc1NwZWNpYWwsIHggPT4geC5pdGVtVHlwZSA9PT0gJ1dlYXBvbicgJiYgeC5hbW1vVHlwZSA9PT0gJ1NwZWNpYWwnKSxcbiAgICBuZXcgYXBwLkFyZWFWaWV3TW9kZWwoYXBwLmxhbmd1YWdlLml0ZW1zV2VhcG9uQXR0YWNobWVudHMsIHggPT4geC5pdGVtVHlwZSA9PT0gJ0F0dGFjaG1lbnQnKVxuICBdO1xuXG4gIHRvSXRlbVNldCh2YWx1ZTogU2V0PG51bWJlcj4pIHtcbiAgICBmb3IgKGNvbnN0IGFyZWEgb2YgdGhpcy5hcmVhcykge1xuICAgICAgYXJlYS50b0l0ZW1TZXQodmFsdWUpO1xuICAgIH1cbiAgfVxufVxuIl19