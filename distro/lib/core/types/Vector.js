"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Vector = void 0;
const app = require("..");
class Vector extends app.api.Adapter {
    constructor(offset, interval = 0) {
        super(new app.api.EntityMember(offset, interval, 12));
    }
    delta(value) {
        if (this.value.isSame(value))
            return;
        const { x, y, z } = value.subtract(this.value);
        this.source.buffer.setFloat32(0, value.x, true);
        this.source.buffer.setFloat32(4, value.y, true);
        this.source.buffer.setFloat32(8, value.z, true);
        this.source.deltas = [delta(0, x), delta(4, y), delta(8, z)];
        this.source.send = true;
    }
    get value() {
        const x = this.source.buffer.getFloat32(0, true);
        const y = this.source.buffer.getFloat32(4, true);
        const z = this.source.buffer.getFloat32(8, true);
        return new app.VectorData(x, y, z);
    }
    set value(value) {
        if (this.value.isSame(value))
            return;
        this.source.buffer.setFloat32(0, value.x, true);
        this.source.buffer.setFloat32(4, value.y, true);
        this.source.buffer.setFloat32(8, value.z, true);
        this.source.send = true;
    }
    toString() {
        return app.serialize(this.value);
    }
}
exports.Vector = Vector;
function delta(offset, value) {
    const data = new DataView(new ArrayBuffer(4));
    data.setFloat32(0, value, true);
    return new app.api.EntityChangeMemberDelta(offset, app.api.DeltaType.Float32, data);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jb3JlL3R5cGVzL1ZlY3Rvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwwQkFBMEI7QUFFMUIsTUFBYSxNQUFPLFNBQVEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUE2QjtJQUMvRCxZQUFZLE1BQWMsRUFBRSxRQUFRLEdBQUcsQ0FBQztRQUN0QyxLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELEtBQUssQ0FBQyxLQUFxQjtRQUN6QixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUFFLE9BQU87UUFDckMsTUFBTSxFQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ1AsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNqRCxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2pELE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDakQsT0FBTyxJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsSUFBSSxLQUFLLENBQUMsS0FBcUI7UUFDN0IsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFBRSxPQUFPO1FBQ3JDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUMxQixDQUFDO0lBRUQsUUFBUTtRQUNOLE9BQU8sR0FBRyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkMsQ0FBQztDQUNGO0FBakNELHdCQWlDQztBQUVELFNBQVMsS0FBSyxDQUFDLE1BQWMsRUFBRSxLQUFhO0lBQzFDLE1BQU0sSUFBSSxHQUFHLElBQUksUUFBUSxDQUFDLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hDLE9BQU8sSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDdEYsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFwcCBmcm9tICcuLic7XG5cbmV4cG9ydCBjbGFzcyBWZWN0b3IgZXh0ZW5kcyBhcHAuYXBpLkFkYXB0ZXI8YXBwLmFwaS5FbnRpdHlNZW1iZXI+IHtcbiAgY29uc3RydWN0b3Iob2Zmc2V0OiBudW1iZXIsIGludGVydmFsID0gMCkge1xuICAgIHN1cGVyKG5ldyBhcHAuYXBpLkVudGl0eU1lbWJlcihvZmZzZXQsIGludGVydmFsLCAxMikpO1xuICB9XG5cbiAgZGVsdGEodmFsdWU6IGFwcC5WZWN0b3JEYXRhKSB7XG4gICAgaWYgKHRoaXMudmFsdWUuaXNTYW1lKHZhbHVlKSkgcmV0dXJuO1xuICAgIGNvbnN0IHt4LCB5LCB6fSA9IHZhbHVlLnN1YnRyYWN0KHRoaXMudmFsdWUpO1xuICAgIHRoaXMuc291cmNlLmJ1ZmZlci5zZXRGbG9hdDMyKDAsIHZhbHVlLngsIHRydWUpO1xuICAgIHRoaXMuc291cmNlLmJ1ZmZlci5zZXRGbG9hdDMyKDQsIHZhbHVlLnksIHRydWUpO1xuICAgIHRoaXMuc291cmNlLmJ1ZmZlci5zZXRGbG9hdDMyKDgsIHZhbHVlLnosIHRydWUpO1xuICAgIHRoaXMuc291cmNlLmRlbHRhcyA9IFtkZWx0YSgwLCB4KSwgZGVsdGEoNCwgeSksIGRlbHRhKDgsIHopXTtcbiAgICB0aGlzLnNvdXJjZS5zZW5kID0gdHJ1ZTtcbiAgfVxuXG4gIGdldCB2YWx1ZSgpIHtcbiAgICBjb25zdCB4ID0gdGhpcy5zb3VyY2UuYnVmZmVyLmdldEZsb2F0MzIoMCwgdHJ1ZSk7XG4gICAgY29uc3QgeSA9IHRoaXMuc291cmNlLmJ1ZmZlci5nZXRGbG9hdDMyKDQsIHRydWUpO1xuICAgIGNvbnN0IHogPSB0aGlzLnNvdXJjZS5idWZmZXIuZ2V0RmxvYXQzMig4LCB0cnVlKTtcbiAgICByZXR1cm4gbmV3IGFwcC5WZWN0b3JEYXRhKHgsIHksIHopO1xuICB9XG5cbiAgc2V0IHZhbHVlKHZhbHVlOiBhcHAuVmVjdG9yRGF0YSkge1xuICAgIGlmICh0aGlzLnZhbHVlLmlzU2FtZSh2YWx1ZSkpIHJldHVybjtcbiAgICB0aGlzLnNvdXJjZS5idWZmZXIuc2V0RmxvYXQzMigwLCB2YWx1ZS54LCB0cnVlKTtcbiAgICB0aGlzLnNvdXJjZS5idWZmZXIuc2V0RmxvYXQzMig0LCB2YWx1ZS55LCB0cnVlKTtcbiAgICB0aGlzLnNvdXJjZS5idWZmZXIuc2V0RmxvYXQzMig4LCB2YWx1ZS56LCB0cnVlKTtcbiAgICB0aGlzLnNvdXJjZS5zZW5kID0gdHJ1ZTtcbiAgfVxuXG4gIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBhcHAuc2VyaWFsaXplKHRoaXMudmFsdWUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGRlbHRhKG9mZnNldDogbnVtYmVyLCB2YWx1ZTogbnVtYmVyKSB7XG4gIGNvbnN0IGRhdGEgPSBuZXcgRGF0YVZpZXcobmV3IEFycmF5QnVmZmVyKDQpKTtcbiAgZGF0YS5zZXRGbG9hdDMyKDAsIHZhbHVlLCB0cnVlKTtcbiAgcmV0dXJuIG5ldyBhcHAuYXBpLkVudGl0eUNoYW5nZU1lbWJlckRlbHRhKG9mZnNldCwgYXBwLmFwaS5EZWx0YVR5cGUuRmxvYXQzMiwgZGF0YSk7XG59XG4iXX0=